Q 1 Ans: The time complexity of the provided code is O(N^2). To improve the time complexity of the code , we can use a mathematical relation i.e. N(N+1)/2, to calculate sum rather using two nested loops. Hence the time complexity will reduce to O(N).
Q 2 sol: Given,
		T(N)=3T(N-1)+12N
		T(0)=5
		T(N-1)=3T(N-2)+12(N-1)
		 for N=2;
		T(2)=3T(1)+12*2
		T(1)=3T(0)+12=3*5+12=27
		T(2)=3*27+24=81+24
		T(2)=105  ans.

Q 3 sol: Given,
		t(n)=t(n-1)+c
		t(n-1)=t(n-2)+c
		t(n-2)=t(n-3)+c
		.
		.
		.
	+	t(2)=t(1)+c
	       ______________________
		t(n)= t(1)+cn
	       ______________________
	hence t(n)=O(n) ans.

Q 4 sol: Given,
		t(n)=16t(n/4)+n2logn
	using masters theorem
		t(n)=at(n/b)+Q(nklogpn)
		a=16, b=4, k=2, p=1
		as 16=42 => a=bk and p>-1
		t(n)=O(nlogba logp+1n) , logba=log416=log442=2log44=2 and log1+1n=log2n.
		t(n)=O(n2 log2n) ans.

Q 5 sol: Given,
		t(n)=2t(n/2)+n
					t(n)   -------------------n
				         /	        \
				t(n/2)	            t(n/2)  --------------2n/2=n
			             /         \                 /      \
			  t(n/4)        t(n/4)       t(n/4)    t(n/4) --------------4n/4=n
			.
			.
			.
			t(n/2k) t(n/2k) t(n/2k) t(n/2k) t(n/2k)...	--------------- n
			t(n)=n(1+1+1+...+1) upto k times
			t(n)=nk , 2k=n => k=logn
			t(n)=O(nlogn)  ans.

Q 6 sol: Given,
		t(n)=2t(n/2) +k
		t(n)=k(20+21+22+...2a), 2a=n => a=logn
		t(n)=O(n)  ans.
